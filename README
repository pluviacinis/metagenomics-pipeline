Этот проект - комплексный пайплайн для обработки метагеномных данных, реализованный на Snakemake с использованием conda-окружений для каждого этапа. Пайплайн автоматизирует все ключевые шаги: от очистки ридов до финального анализа вирусных последовательностей и бинов.

Структура пайплайна
fastp - очистка и тримминг парных ридов

megahit - сборка контигов из очищенных ридов

strobealign - выравнивание ридов на собранные контиги

vamb - бининг контигов с использованием BAM-файлов

prodigal - предсказание белков на контигах

deepvirfinder - поиск вирусных последовательностей

phamb - агрегация вирусных бинов и финальный анализ

Используемые инструменты и окружения
Каждый шаг выполняется в отдельном conda-окружении для изоляции зависимостей и воспроизводимости:

fastp

megahit

strobealign

vamb

prodigal

deepvirfinder

phamb

YAML-файлы для создания окружений находятся в папке envs_yaml/.

Установка и подготовка
Клонируйте репозиторий:

bash
git clone <URL_репозитория>
cd <папка_проекта>
Создайте conda-окружения:

bash
# Для каждого окружения используйте соответствующий yaml-файл
conda env create -f envs_yaml/fastp.yml
conda env create -f envs_yaml/megahit.yml
# ... и так далее для всех окружений
Проверьте и настройте файл config.yaml:

Укажите пути к данным (raw_reads_dir, results_dir)

Проверьте список сэмплов и параметры сборки

Запуск пайплайна
Запустите весь пайплайн командой:

bash
snakemake -s Snakefile_test_all.smk --use-conda -j4 --latency-wait 30
-j4 - использовать 4 ядра (можно изменить)

--latency-wait 30 - увеличить время ожидания появления файлов на сетевых/медленных файловых системах

Структура входных данных
Сырые риды должны находиться в директории, указанной в config.yaml (raw_reads_dir)

Формат файлов: {sample}_R1.fastq и {sample}_R2.fastq

Список сэмплов задаётся в config.yaml (samples)

Структура выходных данных
Все результаты сохраняются в директории, указанной в config.yaml (results_dir)

Основные выходные файлы:

Сборка контигов: megahit/contigs.fa

Кластеры VAMB: vamb/vae_clusters_unsplit.tsv

Белки Prodigal: annotations/proteins.faa

Вирусные предсказания DeepVirFinder: annotations/dvf_predictions.tsv

Вирусные бины PHAMB: phamb/viral_bins

Важные моменты и особенности
Автоматическая фильтрация кластеров VAMB:
Перед PHAMB кластеры фильтруются для удаления заголовков и контигов, которых нет в сборке, чтобы избежать ошибок на этапе агрегации.

Гибкая настройка:
Все пути, параметры и список образцов настраиваются через config.yaml.

Изоляция зависимостей:
Каждый шаг работает в своём conda-окружении, что исключает конфликты библиотек.

Совместимость:
Для DeepVirFinder требуется Python 3.6 и специфические версии theano/keras.
Для PHAMB - Python 3.9 и современные версии sklearn/pandas.

Отладка и поддержка
Логи каждого шага сохраняются в папке workflow/logs/.

При ошибках смотрите соответствующий лог-файл и корректность путей в config.yaml.

Для полного пересчёта всех шагов используйте ключ --forceall или удаляйте выходные файлы.
